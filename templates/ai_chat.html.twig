{% extends 'sections/layout.html.twig' %}

{% block title %}IA Chat{% endblock %}

{% block page_content %}
<div class="wrap akyos-ai-chat">
<canvas id="dotlottie-canvas" style="width: 150px; height:150px; margin: 0 auto;"></canvas>
    <div class="ai-chat-container">
        <div class="ai-chat-messages" id="aiChatMessages">
            <div class="ai-message system">
                <div class="message-content">
                    Bonjour ! Je suis votre assistant IA pour la gestion de WordPress. Comment puis-je vous aider aujourd'hui ?
                </div>
            </div>
        </div>

        <div class="ai-chat-input">
            <textarea 
                id="aiChatInput" 
                placeholder="Posez votre question ici..." 
                rows="3"
            ></textarea>
            <button id="aiChatSend" class="button button-primary">
                Envoyer
            </button>
        </div>
    </div>
</div>

<style>
.akyos-ai-chat {
    margin: 20px auto;
    position: relative;
}

#dotlottie-canvas {
    position: absolute;
    top: -80px;
    right: 0;
    width: 100%;
    height: 100%;
}

.ai-chat-container {
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    display: flex;
    flex-direction: column;
    height: 600px;
}

.ai-chat-messages {
    flex: 1;
    overflow-y: auto;
    padding: 20px;
}

.ai-message {
    margin-bottom: 15px;
    max-width: 80%;
}

.ai-message.user {
    margin-left: auto;
}

.ai-message.system {
    margin-right: auto;
}

.message-content {
    padding: 12px 16px;
    border-radius: 12px;
    background: #f0f0f1;
}

.ai-message.user .message-content {
    background: #2271b1;
    color: white;
}

.ai-message.system .message-content {
    background: #f0f0f1;
}

.ai-message.error .message-content {
    background: #f8d7da;
    color: #721c24;
}

.ai-chat-input {
    padding: 20px;
    border-top: 1px solid #ddd;
    display: flex;
    gap: 10px;
}

.ai-chat-input textarea {
    flex: 1;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    resize: none;
}

.ai-chat-input button {
    align-self: flex-end;
}

.ai-chat-input button:disabled {
    opacity: 0.7;
    cursor: not-allowed;
}

.typing-indicator {
    display: none;
    padding: 12px 16px;
    background: #f0f0f1;
    border-radius: 12px;
    margin-bottom: 15px;
    width: fit-content;
}

.typing-indicator.active {
    display: block;
}

.typing-indicator span {
    display: inline-block;
    width: 8px;
    height: 8px;
    background: #666;
    border-radius: 50%;
    margin-right: 4px;
    animation: typing 1s infinite;
}

.typing-indicator span:nth-child(2) {
    animation-delay: 0.2s;
}

.typing-indicator span:nth-child(3) {
    animation-delay: 0.4s;
    margin-right: 0;
}

@keyframes typing {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-5px); }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const chatMessages = document.getElementById('aiChatMessages');
    const chatInput = document.getElementById('aiChatInput');
    const sendButton = document.getElementById('aiChatSend');
    let conversationHistory = [];

    // Fonction pour ajouter un message au chat
    function addMessage(content, type = 'system') {
        const messageDiv = document.createElement('div');
        messageDiv.className = `ai-message ${type}`;
        messageDiv.innerHTML = `
            <div class="message-content">
                ${content}
            </div>
        `;
        chatMessages.appendChild(messageDiv);
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    // Fonction pour afficher l'indicateur de frappe
    function showTypingIndicator() {
        const indicator = document.createElement('div');
        indicator.className = 'typing-indicator';
        indicator.innerHTML = '<span></span><span></span><span></span>';
        indicator.id = 'typingIndicator';
        chatMessages.appendChild(indicator);
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    // Fonction pour masquer l'indicateur de frappe
    function hideTypingIndicator() {
        const indicator = document.getElementById('typingIndicator');
        if (indicator) {
            indicator.remove();
        }
    }

    // Fonction pour envoyer le message
    async function sendMessage() {
        const message = chatInput.value.trim();
        if (!message) return;

        // Désactiver l'input pendant l'envoi
        chatInput.disabled = true;
        sendButton.disabled = true;

        // Ajouter le message de l'utilisateur
        addMessage(message, 'user');
        conversationHistory.push({
            role: 'user',
            content: message
        });

        // Vider l'input
        chatInput.value = '';

        // Afficher l'indicateur de frappe
        showTypingIndicator();

        try {
            const response = await fetch('/wp-json/akyos-updates/v1/ai-chat', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-WP-Nonce': '{{ wp_nonce }}' // Nous ajouterons ceci plus tard
                },
                body: JSON.stringify({
                    message: message,
                    history: conversationHistory
                })
            });

            const data = await response.json();

            // Masquer l'indicateur de frappe
            hideTypingIndicator();

            if (data.type === 'error') {
                addMessage(data.message, 'error');
            } else {
                // Ajouter la réponse de l'IA
                const aiMessage = data.result?.message || 'Désolé, je n\'ai pas pu traiter votre demande.';
                addMessage(aiMessage, 'system');
                
                // Mettre à jour l'historique
                conversationHistory.push({
                    role: 'assistant',
                    content: aiMessage
                });
            }
        } catch (error) {
            hideTypingIndicator();
            addMessage('Une erreur est survenue lors de la communication avec le serveur.', 'error');
        }

        // Réactiver l'input
        chatInput.disabled = false;
        sendButton.disabled = false;
        chatInput.focus();
    }

    // Gestionnaires d'événements
    sendButton.addEventListener('click', sendMessage);
    
    chatInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            sendMessage();
        }
    });
});
</script>
{% endblock %} 